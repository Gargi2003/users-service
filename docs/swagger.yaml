basePath: /api
definitions:
  common.Users:
    properties:
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
  handlers.CreateRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handlers.LoginResponse:
    properties:
      status:
        type: string
      token:
        type: string
    type: object
  handlers.UpdateRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Users API in go using gin-framework
  title: Users Service
  version: "1.0"
paths:
  /auth:
    get:
      consumes:
      - application/json
      description: Middleware to check if the request is authenticated
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Require Authentication
      tags:
      - Authentication
  /login:
    post:
      consumes:
      - application/json
      description: Logs in a user and returns a JWT token
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: User Login
      tags:
      - Authentication
  /signup:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create User
      tags:
      - Authentication
  /users:
    get:
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/common.Users'
            type: array
      summary: List Users
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update an existing user
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update User
      tags:
      - Users
  /users/delete:
    delete:
      consumes:
      - application/json
      description: Delete a user by providing the user ID
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User Deleted!
          schema:
            type: string
        "400":
          description: Error executing query
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a user
      tags:
      - Users
  /users/username:
    get:
      consumes:
      - application/json
      description: Retrieve the username by providing the user ID
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Username
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get username by ID
      tags:
      - Users
  /validate:
    get:
      description: Validates the user information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
      security:
      - ApiKeyAuth: []
      summary: Validate User
      tags:
      - Authentication
swagger: "2.0"
